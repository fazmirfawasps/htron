{"version":3,"file":"static/js/20.4db3dd82.chunk.js","mappings":"yQAUMA,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAA0B,CAC3CE,SAAU,WACVC,IAAK,MACLC,MAAO,MACPC,MAAO,QACPC,OAAQ,EACRC,OAAQ,YAEL,SAASC,EAAOC,GAQf,IAADC,EANCC,EAAQF,EAARE,SACAC,EAAQH,EAARG,SACAC,EAAaJ,EAAbI,cACAC,EAAkBL,EAAlBK,mBACAC,EAAIN,EAAJM,KACAC,EAAQP,EAARO,SAEEC,GAAUC,EAAAA,EAAAA,GAAc,qBAE9B,OACIC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAIT,EAAMU,GAAIV,EAAKW,SAAA,EACzCP,EAAAA,EAAAA,MAACQ,EAAAA,EAAI,CACDC,GAAI,CACAC,SAAUZ,EAAU,IAAM,IAC1Ba,UAAW,OACXvB,OAAQ,WACVmB,SAAA,EAEFP,EAAAA,EAAAA,MAACY,EAAAA,EAAG,CACAC,UAAW,MACXJ,GAAI,CACA1B,SAAU,WACV+B,QAAS,eACXP,SAAA,CAEHV,IACc,OAARL,QAAQ,IAARA,GAAAA,EAAUK,UACPkB,EAAAA,EAAAA,KAACnC,EAAY,CACT6B,GAAI,CAAEvB,MAAO,WACb8B,QAAS,WACLrB,EAAmBH,EAASyB,IAChC,KAGJF,EAAAA,EAAAA,KAACnC,EAAY,CACb6B,GAAI,CAAEvB,MAAO,QAET8B,QAAS,WACLtB,EAAcF,EAClB,MAMZuB,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CAAAX,SACsB,QADtBhB,EACJC,EAAyB,sBAAC,IAAAD,OAAA,EAA1BA,EAA4B4B,KAAI,SAACC,EAAKC,GAAK,OACxCN,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAENT,UAAU,MACVJ,GAAI,CACAc,OAAQ,IACRC,aAAc,GAElBR,QAAS,WACLvB,EAASD,EAASyB,IACtB,EACAQ,IAAKL,GATAC,EAUP,UAKdrB,EAAAA,EAAAA,MAAC0B,EAAAA,EAAK,CAACC,UAAW,SAAUC,QAAS,EAAErB,SAAA,EACnCQ,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CACPC,cAAY,EACZC,QAAQ,QACRtB,GAAI,CACAuB,QAAS,eACTC,aAAc,WACdC,SAAU,SACVC,WAAY,UAEhBtB,UAAU,GAAEN,SAEXf,EAAS4C,gBAEdrB,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACE,QAAQ,QAAQ7C,MAAM,iBAAgBqB,SAC7Cf,EAAS6C,WAEdtB,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CACH1C,KAAK,QACL2C,KAAK,YACLrD,MAAM,GACNsD,MAAO,IACPC,UAAQ,KAEZzC,EAAAA,EAAAA,MAAC6B,EAAAA,EAAU,CAACE,QAAQ,QAAQW,MAAI,EAAAnC,SAAA,CAAC,SAC3Bf,EAASmD,OACX5B,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACE,QAAQ,UAASxB,SAAC,oBAI1CQ,EAAAA,EAAAA,KAACH,EAAAA,EAAG,MAGhB,C,4ICvFA,MA1BA,WACE,OACEG,EAAAA,EAAAA,KAACH,EAAAA,EAAG,CACFH,GAAI,CACFc,OAAQ,OACRS,QAAS,OACTY,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,EAAG,EACHC,gBAAiB,6BACjBC,eAAgB,QAChBC,mBAAoB,SACpBC,iBAAkB,aAClB5C,UAEFQ,EAAAA,EAAAA,KAAA,OACEU,IAAI,sBACJ2B,IAAI,aACJC,QAAQ,OACRC,MAAO,CAAEtB,QAAS,WAI1B,E,yFCbe,SAASuB,IAEpB,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GACtBI,GAAYC,EAAAA,EAAAA,MAClBC,GAAwBP,EAAAA,EAAAA,WAAS,GAAMQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAAjCE,EAAMD,EAAA,GAACE,EAASF,EAAA,GAChBG,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,KAAKC,EAAE,IAwDnD,SAASC,EAAoBD,GAGzBV,EAAU,uBAADY,OAAwBF,GACrC,CAEH,SAASG,EAAerF,GACjB,GAAI8E,EACA,KAEKQ,EAAAA,EAAAA,IAAaR,EAAQ9E,EAASyB,KAAK8D,MAAK,WACrCC,QAAQC,IAAI,kBAEZZ,GAAWD,EAEd,GAEL,CAAE,MAAOc,GACLC,MAAMD,EACV,MAGAF,QAAQC,IAAI,KAEpB,CAAC,SAEctF,EAAkByF,GAAA,OAAAC,EAAAC,MAAC,KAADC,UAAA,UAAAF,IAUhC,OAVgCA,GAAAG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAjC,SAAAC,EAAkCjB,GAAE,OAAAe,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAC5BzB,EAAO,CAADuB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEIC,EAAAA,EAAAA,IAAe1B,EAAQI,GAAG,OAChCL,GAAWD,GAAOyB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAGlBV,MAAKU,EAAAI,IAAK,yBAAAJ,EAAAK,OAAA,GAAAP,EAAA,mBAGrBL,MAAA,KAAAC,UAAA,CACD,SAAS/E,IAcL,OAbesD,EAAS3C,KAAI,SAACjB,EAAMmB,GAC/B,OACIN,EAAAA,EAAAA,KAAC1B,EAAAA,EAAO,CAEJG,SAAUU,EACVT,SAAUkF,EACVjF,cAAemF,EACflF,mBAAoBA,EACpBC,KAAM,EACNC,UAAU,GANLwB,EASjB,GAEJ,CACA,OA5GA8E,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,MAAiBrB,MAAK,SAAAzF,GAAe,IAAZ+G,EAAI/G,EAAJ+G,KACrBrB,QAAQC,IAAIoB,GACjB,IAAI7G,EAAU6G,EACTrB,QAAQC,IAAIX,GACK+B,EAAKC,MAAK,SAACpG,GAAI,OAAKA,EAAKqG,SAAWjC,CAAM,KAEvDU,QAAQC,IAAI,gBACZzB,GAASgD,EAAAA,EAAAA,KAAY,MAIrBhD,GAASgD,EAAAA,EAAAA,KAAY,IACrBxB,QAAQC,IAAI,kBAGbX,GACCmC,EAAAA,EAAAA,IAAYnC,GAAQS,MAAK,SAAA2B,GAAe,IAAZL,EAAIK,EAAJL,KACxBrB,QAAQC,IAAIoB,GACZrB,QAAQC,IAAI,mBACZ,IAAM0B,EAAWnH,EAAS2B,KAAI,SAAAjB,GAE1B,OADqBmG,EAAKC,MAAK,SAAAM,GAAG,OAAIA,EAAI3F,MAAQf,EAAKe,GAAG,KAEtD+D,QAAQC,IAAI,UACd4B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY3G,GAAI,IAAEL,UAAS,KAEtBK,CACT,IACA8E,QAAQC,IAAI0B,GACZ5C,EAAY4C,EAElB,IAAGG,OAAM,WAET,IAGA/C,EAAYvE,EAIpB,GACJ,GAAG,CAAC8E,EAAOF,KAIX+B,EAAAA,EAAAA,YAAU,WACNY,EAAAA,EAAIC,IAAI,mBAADpC,OAAoBN,IAAUS,MAAK,SAAAkC,GAAe,IAAZZ,EAAIY,EAAJZ,KACzCrB,QAAQC,IAAIoB,GACZ7C,GAAS0D,EAAAA,EAAAA,IAAeb,EAAK,GAAGc,cAChC3D,GAAS4D,EAAAA,EAAAA,IAAYf,EAAK,GAAGgB,UACjC,IAAGP,OAAM,WAET,GACJ,GAAG,CAACxC,KAwDAtE,EAAAA,EAAAA,MAAA,OAAAO,SAAA,EACIQ,EAAAA,EAAAA,KAACuG,EAAO,KAMRtH,EAAAA,EAAAA,MAACuH,EAAAA,EAAS,CACN7G,SAAS,KACTD,GAAI,CACA+G,MAAO,OACTjH,SAAA,EAEFQ,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAAC4F,GAAI,EAAGC,GAAI,EAAGxI,MAAM,UAAUuB,GAAI,CAAEkH,UAAW,QAAU5F,QAAQ,KAAIxB,SAAC,uCAGlFQ,EAAAA,EAAAA,KAACd,EAAAA,GAAI,CAAC2H,WAAS,EAAArH,UACXQ,EAAAA,EAAAA,KAACP,EAAI,WAOzB,C","sources":["components/ProCard.jsx","components/home.jsx","pages/home.jsx"],"sourcesContent":["import * as React from 'react'\r\nimport { Box, styled, CardMedia, useMediaQuery, Grid } from '@mui/material'\r\nimport Card from '@mui/material/Card'\r\nimport Typography from '@mui/material/Typography'\r\nimport FavoriteSharpIcon from '@mui/icons-material/FavoriteSharp'\r\nimport PropTypes from 'prop-types';\r\nimport Rating from '@mui/material/Rating'\r\nimport { Stack } from '@mui/system'\r\nimport Swipeble from './Swipeable'\r\n\r\nconst FavoriteIcon = styled(FavoriteSharpIcon)({\r\n    position: 'absolute',\r\n    top: '5px',\r\n    right: '5px',\r\n    color: 'white',\r\n    zIndex: 1,\r\n    cursor: 'pointer',\r\n})\r\nexport function ProCard(\r\n    {\r\n        property,\r\n        callback,\r\n        addtowishlist,\r\n        removeFromWishlist,\r\n        size,\r\n        wishlist\r\n    }) {\r\n    const matches = useMediaQuery('(min-width:600px)')\r\n\r\n    return (\r\n        <Grid item xs={12} sm={6} md={size} lg={size}>\r\n            <Card\r\n                sx={{\r\n                    maxWidth: matches ? 280 : 340,\r\n                    boxShadow: 'none',\r\n                    cursor: 'pointer',\r\n                }}\r\n            >\r\n                <Box\r\n                    component={'div'}\r\n                    sx={{\r\n                        position: 'relative',\r\n                        bgcolor: 'transparent',\r\n                    }}\r\n                >\r\n                  {wishlist &&\r\n                        (property?.wishlist ? (\r\n                            <FavoriteIcon\r\n                                sx={{ color: '#d4213f'}}\r\n                                onClick={() => {\r\n                                    removeFromWishlist(property._id)\r\n                                }}\r\n                            />\r\n                        ) : (\r\n                            <FavoriteIcon \r\n                            sx={{ color: 'grey' }}\r\n\r\n                                onClick={() => {\r\n                                    addtowishlist(property)\r\n                                }}\r\n                            />\r\n                        ))} \r\n                   \r\n                    \r\n\r\n                    <Swipeble>\r\n                        {property['imageFilenames']?.map((img, index) => (\r\n                            <CardMedia\r\n                                key={index}\r\n                                component=\"img\"\r\n                                sx={{\r\n                                    height: 270,\r\n                                    borderRadius: 3,\r\n                                }}\r\n                                onClick={() => {\r\n                                    callback(property._id)\r\n                                }}\r\n                                src={img}\r\n                            />\r\n                        ))}\r\n                    </Swipeble>\r\n                </Box>\r\n\r\n                <Stack direction={'column'} spacing={0}>\r\n                    <Typography\r\n                        gutterBottom\r\n                        variant=\"body1\"\r\n                        sx={{\r\n                            display: 'inline-block',\r\n                            textOverflow: 'ellipsis',\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                        }}\r\n                        component=\"\"\r\n                    >\r\n                        {property.PropertyName}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {property.Address}\r\n                    </Typography>\r\n                    <Rating\r\n                        size=\"small\"\r\n                        name=\"read-only\"\r\n                        color=\"\"\r\n                        value={3.5}\r\n                        readOnly\r\n                    />\r\n                    <Typography variant=\"body1\" bold>\r\n                        â‚¹{property.Price}\r\n                        <Typography variant=\"caption\">/ day</Typography>\r\n                    </Typography>\r\n                </Stack>\r\n            </Card>\r\n            <Box />\r\n        </Grid>\r\n    )\r\n}\r\nProCard.propTypes = {\r\n    property: PropTypes.object.isRequired,\r\n    callback: PropTypes.func,\r\n    addtowishlist: PropTypes.func,\r\n    removeFromWishlist: PropTypes.func,\r\n    wishlist: PropTypes.array,\r\n    size: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport { Box } from '@mui/material';\r\n\r\nfunction Example() {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: '40vw',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        p: 2,\r\n        backgroundImage: 'url(\"/digger-1867268.jpg\")',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n      }}\r\n    >\r\n      <img\r\n        src=\"/digger-1867268.jpg\"\r\n        alt=\"Background\"\r\n        loading=\"lazy\"\r\n        style={{ display: 'none' }}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Example;\r\n","// import HomeText from \"../components/hometext\";\r\n// import Homecard from \"../components/homecard\";\r\nimport Example from \"../components/home\";\r\nimport { useState, useEffect, } from \"react\";\r\nimport { GetAllProperty } from \"../api/apicall\";\r\nimport { ProCard } from \"../components/ProCard\";\r\nimport { Typography, Container, Grid } from '@mui/material'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { setIshosted, setHostapplied, setVerified } from \"../redux/redux\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport api from \"../axios/axios\";\r\nimport { postwishlist, deleteWishlist, getWishlist } from \"../api/apicall\";\r\n\r\n\r\nexport default function Home() {\r\n    // const isTrue = true;\r\n    const dispatch = useDispatch()\r\n    const [Property, setProperty] = useState([])\r\n    const naviagate = useNavigate()\r\n    const[change,setChange]=useState(false)\r\n    const userId = useSelector((state) => state.user.id)\r\n    useEffect(() => {\r\n        GetAllProperty().then(({ data }) => {\r\n            console.log(data);\r\n       let property =data\r\n            console.log(userId);\r\n            const isHosted = data.find((item) => item.hostid === userId)\r\n            if (isHosted) {\r\n                console.log('TRUE BOOLEAN');\r\n                dispatch(setIshosted(true))\r\n\r\n            }\r\n            else {\r\n                dispatch(setIshosted(false))\r\n                console.log('false BOOLEAN');\r\n\r\n            }\r\n            if(userId){\r\n                getWishlist(userId).then(({ data }) => {\r\n                    console.log(data);\r\n                    console.log('wishlist kiitti');\r\n                    const newArray = property.map(item => {\r\n                        const matchingItem = data.find(obj => obj._id === item._id);\r\n                        if (matchingItem) {\r\n                            console.log('OOMBI');\r\n                          return { ...item, wishlist:true };\r\n                        }\r\n                        return item;\r\n                      });\r\n                      console.log(newArray);\r\n                      setProperty(newArray)\r\n    \r\n                }).catch(() => {\r\n        \r\n                })\r\n            }\r\n            else{\r\n                setProperty(property)\r\n            }\r\n            \r\n\r\n        })\r\n    }, [userId,change])\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n        api.get(`/getauserdetail/${userId}`).then(({ data }) => {\r\n            console.log(data);\r\n            dispatch(setHostapplied(data[0].Hostapplied))\r\n            dispatch(setVerified(data[0].Verified))\r\n        }).catch(() => {\r\n\r\n        })\r\n    }, [userId])\r\n\r\n    function navigetTosinglepage(id) {\r\n        // // let singleProperty = Property.find((item) => item._id == id)\r\n        // dispatch(addProperty(singleProperty))\r\n        naviagate(`/View-SingleProduct/${id}`)\r\n    }\r\n\r\n function addtofavourite(property) {\r\n        if (userId) {\r\n            try {\r\n\r\n                 postwishlist(userId, property._id).then(()=>{\r\n                    console.log('addto favorite');\r\n\r\n                    setChange(!change)\r\n\r\n                 })\r\n\r\n            } catch (err) {\r\n                alert(err)\r\n            }\r\n        } else {\r\n            // setOpenlogin(true)\r\n            console.log('hj');\r\n        }\r\n    }\r\n\r\n    async function removeFromWishlist(id) {\r\n        if (userId) {\r\n            try {\r\n                await deleteWishlist(userId, id)\r\n                setChange(!change)\r\n\r\n            } catch (err) {\r\n                alert(err)\r\n            }\r\n        }\r\n    }\r\n    function Card() {\r\n        const result = Property.map((item, index,) => {\r\n            return (\r\n                <ProCard\r\n                    key={index}\r\n                    property={item}\r\n                    callback={navigetTosinglepage}\r\n                    addtowishlist={addtofavourite}\r\n                    removeFromWishlist={removeFromWishlist}\r\n                    size={3}\r\n                    wishlist={true}\r\n                />\r\n            )\r\n        })\r\n        return result\r\n    }\r\n    return (\r\n        <div>\r\n            <Example></Example>\r\n            {/* <HomeText isTrue={isTrue}></HomeText>\r\n            <Homecard></Homecard> */}\r\n            {/* <HomeText></HomeText>\r\n\r\n            <Homecard></Homecard> */}\r\n            <Container\r\n                maxWidth=\"xl\"\r\n                sx={{\r\n                    width: '94%',\r\n                }}\r\n            >\r\n                <Typography pt={4} pb={4} color=\"primary\" sx={{ textAlign: 'left' }} variant=\"h4\">\r\n                    Looking for the perfect Vehicle ?\r\n                </Typography>\r\n                <Grid container>\r\n                    <Card />\r\n                </Grid>\r\n            </Container>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n"],"names":["FavoriteIcon","styled","FavoriteSharpIcon","position","top","right","color","zIndex","cursor","ProCard","_ref","_property$imageFilena","property","callback","addtowishlist","removeFromWishlist","size","wishlist","matches","useMediaQuery","_jsxs","Grid","item","xs","sm","md","lg","children","Card","sx","maxWidth","boxShadow","Box","component","bgcolor","_jsx","onClick","_id","Swipeble","map","img","index","CardMedia","height","borderRadius","src","Stack","direction","spacing","Typography","gutterBottom","variant","display","textOverflow","overflow","whiteSpace","PropertyName","Address","Rating","name","value","readOnly","bold","Price","flexDirection","justifyContent","alignItems","p","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","alt","loading","style","Home","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","Property","setProperty","naviagate","useNavigate","_useState3","_useState4","change","setChange","userId","useSelector","state","user","id","navigetTosinglepage","concat","addtofavourite","postwishlist","then","console","log","err","alert","_x","_removeFromWishlist","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","deleteWishlist","t0","stop","useEffect","GetAllProperty","data","find","hostid","setIshosted","getWishlist","_ref2","newArray","obj","_objectSpread","catch","api","get","_ref3","setHostapplied","Hostapplied","setVerified","Verified","Example","Container","width","pt","pb","textAlign","container"],"sourceRoot":""}