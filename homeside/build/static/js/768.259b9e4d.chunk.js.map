{"version":3,"file":"static/js/768.259b9e4d.chunk.js","mappings":"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","sources":["components/Textfield.jsx","host/HostApply.jsx"],"sourcesContent":["import React from 'react'\r\nimport { TextField } from '@mui/material'\r\n\r\nexport default function ReusableTextField(props) {\r\n    const { label, variant, error, helperText, ...rest } = props\r\n    return (\r\n        <TextField\r\n            {...rest}\r\n            label={label}\r\n            variant={variant}\r\n            error={!!error}\r\n            helperText={error ? helperText : ''}\r\n            fullWidth\r\n        />\r\n    )\r\n}\r\n","import React ,{useEffect, useState}from 'react'\r\nimport { useForm, Controller } from 'react-hook-form'\r\n// import  from '../../component/ReusebleTextField'\r\nimport InputText from '../components/Textfield'\r\nimport { Box, Paper, Typography } from '@mui/material'\r\nimport BtnComponent from '../components/btncomponent'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setHostapplied } from '../redux/redux'\r\nimport { SendHostDetails } from '../api/apicall'\r\nimport { styled } from '@mui/material/styles'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport api from '../axios/axios'\r\n\r\n\r\n// import { hostRequest } from '../../Redux/user/userAction'\r\nexport default function HostApplyPage() {\r\n    const dispatch = useDispatch();\r\n    const userId = useSelector((state) => state.user.id)\r\n    const applied = useSelector((state) => state.user.Hostapplied)\r\n      useEffect(()=>{\r\n       api.get(`/getauserdetail/${userId}`)\r\n      },[])\r\n    const {\r\n        handleSubmit,\r\n        control,\r\n        formState: { errors },\r\n        setError,\r\n    } = useForm()\r\n\r\n\r\n\r\n    const ProfileAvatar = styled(Avatar)(({ theme }) => ({\r\n        width: theme.spacing(15),\r\n        height: theme.spacing(15),\r\n        marginLeft: theme.spacing(15),\r\n\r\n    }))\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    const handleImageUpload = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file && file.type.includes('image')) {\r\n            setSelectedImage(URL.createObjectURL(file));\r\n          } else {\r\n            setSelectedImage(null);\r\n            // Display error message to the user\r\n            alert('Please select a valid image file.');\r\n          }\r\n      };\r\n    function stringAvatar() {\r\n        return {\r\n            sx: {\r\n                bgcolor: '#fffff',\r\n            },\r\n            children: <img src={selectedImage} style={{ width: '100%', height: '100%', objectFit: 'contain', objectPosition: 'center' }}/>,\r\n        }\r\n    }\r\n   \r\n\r\n\r\n\r\n    const navigate = useNavigate()\r\n    const name = 'fazmie'\r\n    function Submit(data) {\r\n        console.log(data);\r\n        SendHostDetails(data,userId)\r\n            .then(() => {\r\n                console.log('sadsd');\r\n                    dispatch(setHostapplied(true))\r\n            })\r\n            .catch((err) => {\r\n                alert(err)\r\n            })\r\n    }\r\n    function handlehome() {\r\n        navigate('/')\r\n    }\r\n    return (\r\n        <Box\r\n            // component={'body'}\r\n            sx={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                height: '120vh',\r\n                marginTop: '60px'\r\n            }}\r\n        >\r\n            {applied ? (\r\n                <Box alignItems={'center'} justifyContent={'center'}>\r\n                    <Typography variant=\"h4\">successfully submited</Typography>\r\n                    <Typography variant=\"h6\">\r\n                        The request to become host will be approved after\r\n                        verification\r\n                    </Typography>\r\n                    <BtnComponent\r\n                        variant={'contained'}\r\n                        callback={handlehome}\r\n                        content={'back to home'}\r\n                    />\r\n                </Box>\r\n            ) : (\r\n            <Paper sx={{ width: 400, p: 1 }}>\r\n                <Box sx={{ maxWidth: 500 }}>\r\n                    <ProfileAvatar {...stringAvatar(name)} />\r\n\r\n                    <form onSubmit={handleSubmit(Submit)}>\r\n                        <label>FullName</label>\r\n                        <Controller\r\n                            name=\"FullName\"\r\n                            control={control}\r\n                            rules={{ required: true, pattern: /[^\\s\\\\]/ }}\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    placeholder={'fullName'}\r\n                                    {...field}\r\n                                />\r\n                            )}\r\n                        />\r\n                        {errors.FullName && (\r\n                            <span style={{ color: 'red' }}>FullName is required</span>\r\n                        )}\r\n                        <Box sx={{ marginTop: '10px' }} />\r\n                        <label>DateOfBirth</label>\r\n                        <Controller\r\n                            name=\"DateOfBirth\"\r\n                            control={control}\r\n                            rules={{ required: true }}\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    placeholder={'DateOfBirth'}\r\n                                    type={'date'}\r\n                                    {...field}\r\n                                />\r\n                            )}\r\n                        />\r\n                        {errors.DateOfBirth && (\r\n                            <span style={{ color: 'red' }}>DateOfBirth is required</span>\r\n                        )}\r\n                        <Box sx={{ marginTop: '10px' }} />\r\n                        <label>AadharNumber</label>\r\n                        <Controller\r\n                            name=\"AadharNumber\"\r\n                            control={control}\r\n                            rules={{ required: true, pattern: /[^\\s\\\\]/ }}\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    placeholder={'AadharNumber'}\r\n                                    {...field}\r\n                                />\r\n                            )}\r\n                        />\r\n                        {errors.AadharNumber && (\r\n                            <span style={{ color: 'red' }}>AadharNumber is required</span>\r\n                        )}\r\n                        <Box sx={{ marginTop: '10px' }} />\r\n                        <label>PanCard</label>\r\n                        <Controller\r\n                            name=\"PanCard\"\r\n                            control={control}\r\n                            rules={{ required: true, pattern: /[^\\s\\\\]/ }}\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    placeholder={'PanCard'}\r\n                                    {...field}\r\n                                />\r\n                            )}\r\n                        />\r\n                        {errors.PanCard && <span style={{ color: 'red' }}>PanCard is required</span>}\r\n                        <Box sx={{ marginTop: '10px' }} />\r\n                        <label>Address</label>\r\n                        <Controller\r\n                            name=\"Address\"\r\n                            control={control}\r\n                            rules={{ required: true, pattern: /[^\\s\\\\]/ }}\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    placeholder={'Address'}\r\n                                    {...field}\r\n                                />\r\n                            )}\r\n                        />\r\n                        {errors.Address && <span style={{ color: 'red' }}>Address is required</span>}\r\n                        <Box sx={{ marginTop: '10px' }} />\r\n                        <label>RentalLicensePermit</label>\r\n                        <Controller\r\n                            name=\"RentalLicensePermit\"\r\n                            control={control}\r\n                            rules={{ required: true, pattern: /[^\\s\\\\]/ }}\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    placeholder={'Rental License Number'}\r\n                                    {...field}\r\n                                />\r\n                            )}\r\n                        />\r\n                        {errors.RentalLicensePermit && (\r\n                            <span style={{ color: 'red' }}> Rental License Number is required</span>\r\n                        )}\r\n                        <Box sx={{ marginTop: '10px' }} />\r\n                        <label>Upload your Photo</label>\r\n\r\n                        <Controller\r\n                            name=\"Image\"\r\n                            control={control}\r\n                            rules={{ required: true }}\r\n                            render={({ field }) => (\r\n                                <>\r\n                                    <input\r\n                                        id=\"image-upload\"\r\n                                        type=\"file\"\r\n                                        onChange={(e) => {\r\n                                            const file = e.target.files[0];\r\n\r\n                                            // Perform file validation\r\n                                            if (file && file.type.includes('image')) {\r\n                                              handleImageUpload(e);\r\n                                              field.onChange(file);\r\n                                            } else {\r\n                                              field.onChange(null);\r\n                                              setError('Image', {\r\n                                                type: 'manual',\r\n                                                message: 'Please select an image file instead of a PDF.'\r\n                                              });\r\n                                              // Display error message to the user\r\n                                              alert('Please select a valid image file.');\r\n                                            }\r\n\r\n                                        }}\r\n                                        style={{\r\n                                            border: '1px solid #ccc',\r\n                                            borderRadius: '4px',\r\n                                            padding: '14px',\r\n                                            width: '100%',\r\n                                            color:'grey',\r\n                                            height:'57px'\r\n                                          }}\r\n                                    />\r\n                                    {/* {field.value && (\r\n                                        <Typography>{field.value.name}</Typography>\r\n                                    )} */}\r\n                                </>\r\n                            )}\r\n                        />\r\n                        {errors.Image && (\r\n                            <span style={{ color: 'red' }}>Image is required</span>\r\n                        )}\r\n                        <Box sx={{ marginTop: '10px' }} />\r\n\r\n                        <BtnComponent\r\n                            type={'submit'}\r\n                            content={'submit'}\r\n                            variant={'contained'}\r\n                        />\r\n                    </form>\r\n                </Box>\r\n            </Paper>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n"],"names":["ReusableTextField","props","label","variant","error","helperText","rest","_objectWithoutProperties","_excluded","_jsx","TextField","_objectSpread","fullWidth","HostApplyPage","dispatch","useDispatch","userId","useSelector","state","user","id","applied","Hostapplied","useEffect","api","get","concat","_useForm","useForm","handleSubmit","control","errors","formState","setError","ProfileAvatar","styled","Avatar","_ref","theme","width","spacing","height","marginLeft","_useState","useState","_useState2","_slicedToArray","selectedImage","setSelectedImage","navigate","useNavigate","Box","sx","display","justifyContent","alignItems","marginTop","children","_jsxs","Typography","BtnComponent","callback","content","Paper","p","maxWidth","bgcolor","src","style","objectFit","objectPosition","onSubmit","data","console","log","SendHostDetails","then","setHostapplied","catch","err","alert","Controller","name","rules","required","pattern","render","_ref2","field","InputText","placeholder","FullName","color","_ref3","type","DateOfBirth","_ref4","AadharNumber","_ref5","PanCard","_ref6","Address","_ref7","RentalLicensePermit","_ref8","_Fragment","onChange","e","file","target","files","includes","URL","createObjectURL","handleImageUpload","message","border","borderRadius","padding","Image"],"sourceRoot":""}