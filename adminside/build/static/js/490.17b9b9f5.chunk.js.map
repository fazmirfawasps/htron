{"version":3,"file":"static/js/490.17b9b9f5.chunk.js","mappings":"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","sources":["customHooks/emailHook.js","components/Login.jsx"],"sourcesContent":["import { useState } from 'react';\r\n\r\nfunction useEmailValidation(initialValue) {\r\n  const [email, setEmail] = useState(initialValue);\r\n  const [isValid, setIsValid] = useState(true);\r\n\r\n  function validateEmail(value) {\r\n    // Email validation regular expression\r\n    const emailRegex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\r\n\r\n    if (emailRegex.test(value)) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  }\r\n\r\n  function handleChange(event) {\r\n    setEmail(event.target.value);\r\n    validateEmail(event.target.value);\r\n  }\r\n\r\n  return { email, isValid, handleChange };\r\n}\r\n\r\nexport default useEmailValidation;\n","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import Link from '@mui/material/Link';\r\n// import Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../axios/axios';\r\nimport useEmailValidation from '../customHooks/emailHook';\r\nimport {  setLoggedIn } from '../redux/redux';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useEffect } from 'react';\r\nimport Card from '@mui/material/Card';\r\n\r\n// function Copyright(props) {\r\n//   return (\r\n//     <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n//       {'Copyright Â© '}\r\n//       <Link color=\"inherit\" href=\"https://mui.com/\">\r\n//         Your Website\r\n//       </Link>{' '}\r\n//       {new Date().getFullYear()}\r\n//       {'.'}\r\n//     </Typography>\r\n//   );\r\n// }\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function SignIn() {\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const admin = useSelector(state => state.admin)\r\n  console.log(admin);\r\n  useEffect(() => {\r\n    // Call the `navigate` function to navigate to a different page\r\n    if (admin.loggedIn) {\r\n      navigate('/');\r\n\r\n    }\r\n  }, [navigate, admin])\r\n\r\n  const { email, isValid, handleChange } = useEmailValidation('');\r\n  const [error, setError] = React.useState('')\r\n  const [pass, setPass] = React.useState('')\r\n  // const handleSubmit = (event) => {\r\n  //   event.preventDefault();\r\n  //   const data = new FormData(event.currentTarget);\r\n  //   console.log(data);\r\n  //   console.log({\r\n  //     email: data.get('email'),\r\n  //     password: data.get('password'),\r\n\r\n  //   });\r\n  //   // api.get('/admin', {\r\n  //   //   params: {\r\n  //   //   id :'heloo'\r\n  //   //   }})\r\n  // };\r\n  const sendData = () => {\r\n    console.log(email + pass);\r\n    setError('')\r\n    api.get('/admin', {\r\n      params: {\r\n        email: email,\r\n        pass: pass\r\n      }\r\n    }).then((response) => {\r\n      console.log(response.data);\r\n\r\n      const { accessToken, refreshToken } = response.data;\r\n      localStorage.setItem('accessToken', accessToken);\r\n      localStorage.setItem('refreshToken', refreshToken);\r\n      dispatch(setLoggedIn(true))\r\n\r\n      console.log(admin);\r\n      navigate('/')\r\n\r\n    })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setError('invalid password or email')\r\n      });\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 18,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}\r\n        >\r\n          <Card sx={{\r\n            minWidth: 305,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}>\r\n            <Avatar sx={{ m: 1, bgcolor: '#404040' }}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <Box component=\"form\" noValidate sx={{ mt: 1 }}>\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                value={email}\r\n\r\n\r\n                autoComplete=\"email\"\r\n                onChange={handleChange}\r\n                autoFocus\r\n              />\r\n              {isValid ? <p style={{ color: 'red' }}></p> : <p style={{ color: 'red' }} >Email is invalid</p>}\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                onChange={(e) => setPass(e.target.value)}\r\n\r\n\r\n                autoComplete=\"current-password\"\r\n              />\r\n              {/* <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            /> */}\r\n              <p style={{ color: 'red' }} >{error}</p>\r\n              <Button\r\n                // type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2, bgcolor: '#404040' }}\r\n                onClick={sendData}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              {/* <Grid container>\r\n              <Grid item xs>\r\n                <NavLink to='/' variant=\"body2\">\r\n                  Forgot password?\r\n                </NavLink>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid> */}\r\n            </Box>\r\n          </Card>\r\n        </Box>\r\n        {/* <Copyright sx={{ mt: 8, mb: 4 }} /> */}\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}"],"names":["initialValue","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","isValid","setIsValid","handleChange","event","value","target","test","theme","createTheme","SignIn","navigate","useNavigate","dispatch","useDispatch","admin","useSelector","state","console","log","useEffect","loggedIn","_useEmailValidation","useEmailValidation","_React$useState","React","_React$useState2","error","setError","_React$useState3","_React$useState4","pass","setPass","_jsx","ThemeProvider","children","_jsxs","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","justifyContent","alignItems","Card","minWidth","flexDirection","Avatar","m","bgcolor","LockOutlinedIcon","Typography","variant","noValidate","mt","TextField","margin","required","fullWidth","id","label","name","autoComplete","onChange","autoFocus","style","color","type","e","Button","mb","onClick","api","params","then","response","data","_response$data","accessToken","refreshToken","localStorage","setItem","setLoggedIn","catch"],"sourceRoot":""}