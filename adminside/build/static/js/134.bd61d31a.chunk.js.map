{"version":3,"file":"static/js/134.bd61d31a.chunk.js","mappings":"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","sources":["components/Sidebar.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n  styled,\r\n  //  useTheme \r\n} from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\n// import MuiAppBar from '@mui/material/AppBar';\r\n// import Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\n// import Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\n// import IconButton from '@mui/material/IconButton';\r\n// import MenuIcon from '@mui/icons-material/Menu';\r\n// import ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\n// import ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n// import BookingIcon from '@mui/icons-material/Booking';\r\nimport MenuIcon from '@mui/icons-material/Menu'\r\n// import InboxIcon from '@mui/icons-material/MoveToInbox';\r\n// import MailIcon from '@mui/icons-material/Mail';\r\n// import { setAdmin } from '../redux/redux';\r\nimport ExitToAppIcon from '@mui/icons-material/ExitToApp';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setLogout } from '../redux/redux';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport { Outlet, NavLink, useNavigate, useLocation } from 'react-router-dom';\r\n// import NotificationsIcon from '@mui/icons-material/Notifications';\r\n\r\nimport {\r\n  // FaBars,\r\n  FaUserAlt,\r\n  // FaRegChartBar,\r\n  // FaCar\r\n  FaBell ,\r\n\r\n  FaShoppingBag,\r\n  FaTruck,\r\n  FaThList\r\n} from \"react-icons/fa\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst openedMixin = (theme) => ({\r\n  width: drawerWidth,\r\n  transition: theme.transitions.create('width', {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.enteringScreen,\r\n  }),\r\n  overflowX: 'hidden',\r\n});\r\n\r\nconst closedMixin = (theme) => ({\r\n  transition: theme.transitions.create('width', {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  overflowX: 'hidden',\r\n  width: `calc(${theme.spacing(7)} + 1px)`,\r\n  [theme.breakpoints.up('sm')]: {\r\n    width: `calc(${theme.spacing(8)} + 1px)`,\r\n  },\r\n});\r\n\r\nconst DrawerHeader = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n}));\r\n\r\n// const AppBar = styled(MuiAppBar, {\r\n//   shouldForwardProp: (prop) => prop !== 'open',\r\n// })(({ theme, open }) => ({\r\n//   zIndex: theme.zIndex.drawer + 1,\r\n//   transition: theme.transitions.create(['width', 'margin'], {\r\n//     easing: theme.transitions.easing.sharp,\r\n//     duration: theme.transitions.duration.leavingScreen,\r\n\r\n//   }),\r\n//   backgroundColor: '#136c78', \r\n//   height: '60px',\r\n//   ...(open && {\r\n//     marginLeft: drawerWidth,\r\n//     width: `calc(100% - ${drawerWidth}px)`,\r\n//     transition: theme.transitions.create(['width', 'margin'], {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.enteringScreen,\r\n//     }),\r\n//   }),\r\n// }));\r\n\r\nconst Drawer = styled(MuiDrawer)(({ theme, open }) => ({\r\n  width: drawerWidth,\r\n  flexShrink: 0,\r\n  whiteSpace: 'nowrap',\r\n  boxSizing: 'border-box',\r\n  ...(open && {\r\n    ...openedMixin(theme),\r\n    '& .MuiDrawer-paper': {\r\n      ...openedMixin(theme),\r\n      backgroundColor: '#fffff',\r\n    },\r\n  }),\r\n  ...(!open && {\r\n    ...closedMixin(theme),\r\n    '& .MuiDrawer-paper': {\r\n      ...closedMixin(theme),\r\n      backgroundColor: '#404040',\r\n    },\r\n  }),\r\n}));\r\n\r\n\r\nexport default function MiniDrawer() {\r\n  // const dispatch = useDispatch()\r\n  const admin = useSelector(state => state.admin)\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  React.useEffect(() => {\r\n    // Call the `navigate` function to navigate to a different page\r\n    if (!admin.loggedIn) {\r\n      navigate('/login');\r\n\r\n    }\r\n  }, [navigate, admin]);\r\n\r\n  const menuItem = [\r\n    {\r\n      path: \"/\",\r\n      name: \"Dashboard\",\r\n      icon: <HomeIcon />\r\n    },\r\n    {\r\n      path: \"/about\",\r\n      name: \"user\",\r\n      icon: <FaUserAlt />\r\n\r\n    },\r\n\r\n    // {\r\n    //     path:\"/analytics\",\r\n    //     name:\"Booking\",\r\n    //     icon:<FaRegChartBar/>\r\n    // },\r\n    {\r\n      path: \"/PropertyList\",\r\n      name: \"Vehicle Management\",\r\n      icon: <FaThList />\r\n    },\r\n    {\r\n      path: \"/Hostrequest\",\r\n      name: \"Host Request\",\r\n      icon: <FaBell />\r\n\r\n    },\r\n    {\r\n      path: \"/Booking\",\r\n      name: \"Booking\",\r\n      icon: <FaShoppingBag />\r\n    },\r\n    {\r\n      path: \"/category\",\r\n      name: \"Vehicle category\",\r\n      icon: <FaTruck />\r\n    },\r\n\r\n  ]\r\n  // const theme = useTheme();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  // const handleDrawerClose = () => {\r\n  //   setOpen(false);\r\n  // };\r\n  const handleLogout = () => {\r\n    // Remove access and refresh tokens from local storage\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('refreshToken');\r\n    dispatch(setLogout())\r\n\r\n\r\n    // Redirect or perform any other logout actions\r\n    // For example, you can use React Router's history.push() to redirect to a login page\r\n    // history.push('/login');\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex' }}>\r\n      <CssBaseline />\r\n      {/* <AppBar position=\"fixed\" open={open}>\r\n        <Toolbar> */}\r\n      {/* <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            sx={{\r\n              marginRight: 5,\r\n              ...(open && { display: 'none' }),\r\n            }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n      {/* <Typography variant=\"h6\" noWrap component=\"div\">\r\n           heavy vehicle\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar> */}\r\n      <Drawer variant=\"permanent\" open={open} >\r\n        <DrawerHeader sx={{ display: 'flex', justifyContent: 'center' }} onClick={handleDrawerOpen}>\r\n          {/* <IconButton >\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton> */}\r\n          {open ?\r\n            // <Typography variant=\"h6\" noWrap component=\"div\" sx={{color:'#ffffff'}} onClick={handleDrawerOpen}>\r\n            // HeavyVantage\r\n\r\n            // </Typography>\r\n            <img src=\"htron-high-resolution-logo-black-on-white-background.png\" alt=\"\" style={{ width: '150px', height: '70px' }} />\r\n\r\n            : <MenuIcon />}\r\n\r\n        </DrawerHeader>\r\n        <Divider />\r\n        <List>\r\n          {menuItem.map((text,) => (\r\n            <ListItem key={text.name} disablePadding sx={{ display: 'block' }}>\r\n              <NavLink to={text.path} activeClassName=\"active\" style={{ textDecoration: 'none', color: 'black' }} >\r\n\r\n                <ListItemButton\r\n                  sx={{\r\n                    minHeight: 48,\r\n                    justifyContent: open ? 'initial' : 'center',\r\n                    borderRadius: location.pathname === text.path ? '8px' : '0px',\r\n                    px: 2.5,\r\n                    backgroundColor: location.pathname === text.path ? '#7f7f7f' : 'transparent', '&:hover': {\r\n                      backgroundColor: '#bfbfbf',\r\n                      borderRadius: '8px'\r\n\r\n                    }, // set background color if path matches\r\n                  }}\r\n                >\r\n                  <ListItemIcon\r\n                    sx={{\r\n                      minWidth: 0,\r\n                      mr: open ? 3 : 'auto',\r\n                      justifyContent: 'center',\r\n                    }}\r\n                  >\r\n                    {text.icon}\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={text.name} sx={{ opacity: open ? 1 : 0 }} />\r\n                </ListItemButton>\r\n              </NavLink>\r\n            </ListItem>\r\n          ))}\r\n          <ListItem key='6' disablePadding sx={{ display: 'block' }}>\r\n            <NavLink to='/' activeClassName=\"active\" style={{ textDecoration: 'none', color: 'black' }} onClick={handleLogout}>\r\n\r\n              <ListItemButton\r\n                sx={{\r\n                  minHeight: 48,\r\n                  justifyContent: open ? 'initial' : 'center',\r\n                  borderRadius: '0px',\r\n                  px: 2.5,\r\n                  backgroundColor: 'transparent', '&:hover': {\r\n                    backgroundColor: '#bfbfbf',\r\n                    borderRadius: '8px'\r\n\r\n                  }, // set background color if path matches\r\n                }}\r\n              >\r\n                <ListItemIcon\r\n                  sx={{\r\n                    minWidth: 0,\r\n                    mr: open ? 3 : 'auto',\r\n                    justifyContent: 'center',\r\n                  }}\r\n                >\r\n                  <ExitToAppIcon></ExitToAppIcon>\r\n                </ListItemIcon>\r\n                <ListItemText primary='Logout' sx={{ opacity: open ? 1 : 0 }} />\r\n              </ListItemButton>\r\n            </NavLink>\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n        {/* <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem key={text} disablePadding sx={{ display: 'block' }}>\r\n              <ListItemButton\r\n                sx={{\r\n                  minHeight: 48,\r\n                  justifyContent: open ? 'initial' : 'center',\r\n                  px: 2.5,\r\n                }}\r\n              >\r\n                <ListItemIcon\r\n                  sx={{\r\n                    minWidth: 0,\r\n                    mr: open ? 3 : 'auto',\r\n                    justifyContent: 'center',\r\n                  }}\r\n                >\r\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} sx={{ opacity: open ? 1 : 0 }} />\r\n              </ListItemButton>\r\n            </ListItem>\r\n          ))}\r\n        </List> */}\r\n      </Drawer>\r\n      <Box component=\"main\" sx={{ flexGrow: 1, p: 3, overflowX: 'hidden' }}>\r\n        <DrawerHeader />\r\n        <Outlet></Outlet>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}"],"names":["openedMixin","theme","width","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","_defineProperty","leavingScreen","concat","spacing","breakpoints","up","DrawerHeader","styled","_ref2","_objectSpread","display","alignItems","justifyContent","padding","mixins","toolbar","Drawer","MuiDrawer","_ref3","open","flexShrink","whiteSpace","boxSizing","backgroundColor","MiniDrawer","admin","useSelector","state","navigate","useNavigate","location","useLocation","dispatch","useDispatch","React","loggedIn","menuItem","path","name","icon","_jsx","HomeIcon","FaUserAlt","FaThList","FaBell","FaShoppingBag","FaTruck","_React$useState","_React$useState2","_slicedToArray","setOpen","_jsxs","Box","sx","children","CssBaseline","variant","onClick","src","alt","style","height","MenuIcon","Divider","List","map","text","ListItem","disablePadding","NavLink","to","activeClassName","textDecoration","color","ListItemButton","minHeight","borderRadius","pathname","px","ListItemIcon","minWidth","mr","ListItemText","primary","opacity","localStorage","removeItem","setLogout","ExitToAppIcon","component","flexGrow","p","Outlet"],"sourceRoot":""}